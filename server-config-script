#!/bin/bash

if [ `id -u` != 0 ];then
        echo ""
        echo -e "\e[31m Failed: Please Run this Script as root\e[0m\n"
        exit 1
fi

echo "RUNNING TASK 1 ......................."
dnf install httpd -y -q &>/dev/null

echo "RUNNING TASK 2 ......................."
systemctl enable httpd --now &>/dev/null

echo "RUNNING TASK 3 ......................."
firewall-cmd --add-service={http,https} --permanent &>/dev/null
firewall-cmd --add-port={80/tcp,443/tcp} --permanent &>/dev/null
firewall-cmd --reload &>/dev/null

echo "RUNNING TASK 4 ......................."
cd /var/www/html
git clone https://github.com/saim-ali-hub/saim_repo.git &>/dev/null

echo "RUNNING TASK 5 ......................."
mkdir /remoteusers &>/dev/null

echo "RUNNING TASK 6 ......................."
# Define an array of usernames and their corresponding UIDs
declare -A users
users=( ["user1"]=4001 ["user2"]=4002 ["user3"]=4003 )

# Loop through the array and create users with specific UIDs
for user in "${!users[@]}"; do
    uid=${users[$user]}
         useradd -u $uid -b /remoteusers $user >/dev/null
    if [ $? -eq 0 ]; then
        echo "User $user with UID $uid created successfully."
    else
        echo "Failed to create user $user with UID $uid."
    fi
done

echo "RUNNING TASK 7 ......................."
grep -qxF '/remoteusers *(rw,sync)' /etc/exports || echo '/remoteusers *(rw,sync)' >> /etc/exports
exportfs -avr  &>/dev/null
firewall-cmd --add-service={nfs,mountd,rpc-bind} --permanent &>/dev/null
firewall-cmd --reload &>/dev/null
systemctl enable nfs-server --now

echo "RUNNING TASK 8 ......................."
IP_ADDR=$(ip route get 1 | awk '{print $7; exit}')
NETWORK=$(echo "$IP_ADDR" | cut -d. -f1-3)
SUBNET="$NETWORK.0/24"
CONFIG_FILE="/etc/chrony.conf"

dnf install -y chrony >/dev/null 2>&1
systemctl enable chronyd --now >/dev/null 2>&1

# Allow clients on local network (change subnet as needed)
if ! grep -q '^allow ' "$CONFIG_FILE"; then
    echo "allow $SUBNET" | sudo tee -a "$CONFIG_FILE" >/dev/null 2>&1
fi

# Open NTP port in firewall (UDP 123)
firewall-cmd --add-service={ntp,ptp} --permanent >/dev/null 2>&1
firewall-cmd --add-port={123/udp,323/udp} --permanent >/dev/null 2>&1
firewall-cmd --reload >/dev/null 2>&1

# Enable and restart the service
systemctl restart chronyd >/dev/null 2>&1
